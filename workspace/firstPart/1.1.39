import edu.princeton.cs.algs4.BinarySearch;
import edu.princeton.cs.algs4.StdIn;
import edu.princeton.cs.algs4.StdOut;
import edu.princeton.cs.algs4.StdRandom;

/**
 * ÂÒÐò¼ì²é
 * 
 * @author xzx
 *
 */
public class Test {
	public static int exper(int n) {
		int[] a = new int[n];
		int[] b = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = StdRandom.uniform(1000000, 10000000);
			b[i] = StdRandom.uniform(1000000, 10000000);
		}
		Arrays.sort(b);
		int count = 0;
		for (int i = 0; i < a.length; i++) {
			if (BinarySearch.rank(a[i], b) >= 0) {
				count++;
			}
		}
		return count;
	}

	public static void batch(int t, int n) {
		long count = 0;
		for (int i = 0; i < t; i++)
			count += exper(n);

		double avg = 1.0 * count / t;
        System.out.println(count+" ");
		StdOut.printf("%8d: %9.2f\n", n, avg);
	}
    
	public static void main(String[] args){
		int t = StdIn.readInt();
		
        int[] ns = { 1000, 10000, 100000, 1000000 };
        
        for (int i = 0; i < ns.length; i++)
            batch(t, ns[i]);
	}
}