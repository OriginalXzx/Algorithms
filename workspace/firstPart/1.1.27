import edu.princeton.cs.algs4.StdOut;

/**
 *二项分布
 *@author xzx
 *公式P(X=k)=C(n,k)p^k*(1-p^(n-k))=b(k,n,p)
 */
public class Test {
	
	 private static int count = 0; 
	 public static double binomial(int n, int k, double p)
	    {
	        if (n == 0 && k == 0) return 1.0;
	        if (n < 0 || k < 0) return 0.0;
	        
	        count++;
	        return (1.0 - p) * binomial(n-1, k, p) + p * binomial(n-1, k-1, p);
	    }
	    
	    public static void main(String[] args)
	    {
	        int n = 20;
	         int k = 5;
	        double p = 0.25;
	        
	        double b = binomial(n, k, p);
	        
	        StdOut.println(b);
	        StdOut.println(count+"calls");
	        // java Ex_1_1_27a 10  5 0.5:         1,233 calls
	        // java Ex_1_1_27a 20 10 0.5:     1,216,535 calls
	        // java Ex_1_1_27a 30 15 0.5: 1,219,164,498 calls
	
	    }
}